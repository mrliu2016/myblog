<?php

namespace app\backend\controllers;

use app\common\models\Category;
use app\common\models\ReleaseInfo;
use app\common\services\Constants;
use yii\data\Pagination;

/**
 * Class InfoController
 * @package app\backend\controllers
 * 信息
 */
class InfoController extends BaseController
{
    public function afterAction($action, $result)
    {
        $admin_name = \Yii::$app->session['admin_name'];
        $admin_id = \Yii::$app->session['admin_id'];
        if (empty($admin_name) || empty($admin_id)) {
            $this->redirect('/user/login');
        }
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }


    const PAGE = 1;
    const PAGE_SIZE = 10;

    private static function pagination($pageNo, $count)
    {
        $pagination = new Pagination([
            'defaultPageSize' => self::PAGE_SIZE,
            'totalCount' => $count,
        ]);
        $pagination->setPage($pageNo);
        return $pagination;
    }

    /**
     * 列表
     * 需要优化  没有设置分类的都处理成其他
     */
    public function actionList()
    {
        $params = \Yii::$app->request->getQueryParams();
        $this->layout = false;
        if (!empty($params['dateSelect'])) {
            $date = explode(' - ', $params['dateSelect']);
            $params['startTime'] = strtotime($date[0]);
            $params['endTime'] = strtotime($date[1]) + 86399;
        }

        $params['page'] = empty($params['page']) ? self::PAGE : $params['page'];
        $params['pageSize'] = empty($params['pageSize']) ? self::PAGE_SIZE : $params['pageSize'];

        if (isset($params['top']) && $params['top'] == "") {
            unset($params['top']);
        }

        $list = ReleaseInfo::queryList($params);
        $count = ReleaseInfo::count($params);
        $pageNo = $params['page'] - 1;
        $index = $pageNo * $params['pageSize'] + 1;

        $categoryList = Category::categoryMap();

        $params['top'] = isset($params['top']) ? $params['top'] : "";
        return $this->render('list', [
            'params' => $params,
            'list' => $list,
            'count' => $count,
            'pagination' => self::pagination($pageNo, $count),
            'index' => $index,
            'categoryList' => $categoryList
        ]);
    }

    /**
     * @return string
     * 消息删除
     */
    public function actionDelList()
    {
        $params = \Yii::$app->request->getQueryParams();
        $this->layout = false;

        $params['page'] = empty($params['page']) ? self::PAGE : $params['page'];
        $params['pageSize'] = empty($params['pageSize']) ? self::PAGE_SIZE : $params['pageSize'];

        if (isset($params['top']) && $params['top'] == "") {
            unset($params['top']);
        }
        $params['isDelete'] = 1;
        $list = ReleaseInfo::queryList($params);
        $count = ReleaseInfo::count($params);

        $pageNo = $params['page'] - 1;
        $index = $pageNo * $params['pageSize'] + 1;

        $categoryList = Category::categoryMap();
        $params['top'] = isset($params['top']) ? $params['top'] : "";
        return $this->render('del-list', [
            'params' => $params,
            'list' => $list,
            'count' => $count,
            'pagination' => self::pagination($pageNo, $count),
            'index' => $index,
            'categoryList' => $categoryList
        ]);
    }

    /*
     * 编辑
     */
    public function actionEdit()
    {
        if (\Yii::$app->request->isGet) {
            $this->layout = false;
            $params = \Yii::$app->request->getQueryParams();

            $info = ReleaseInfo::queryOne($params['id']);
            $categoryList = Category::categoryMap();
            return $this->render('edit', [
                'params' => $params,
                'info' => $info,
                'categoryList' => $categoryList
            ]);
        } else {
            $params = \Yii::$app->request->post();
            $result = ReleaseInfo::edit($params['id'], $params['content']);
            if ($result) {
                $this->jsonReturnSuccess(Constants::CODE_SUCCESS, $result, 'success');
            }
            $this->jsonReturnError(Constants::CODE_FAILED, 'fail');
        }
    }

    /**
     * 删除
     */
    public function actionDel()
    {
        $params = \Yii::$app->request->getQueryParams();
        $result = ReleaseInfo::delOrUndoInfo($params['id']);
        if ($result) {
            $this->jsonReturnSuccess(Constants::CODE_SUCCESS, $result, 'success');
        }
        $this->jsonReturnError(Constants::CODE_FAILED, 'fail');
    }

    /**
     * 撤销
     */
    public function actionUndo()
    {
        $params = \Yii::$app->request->getQueryParams();
        $result = ReleaseInfo::delOrUndoInfo($params['id'], 0);
        if ($result) {
            $this->jsonReturnSuccess(Constants::CODE_SUCCESS, $result, 'success');
        }
        $this->jsonReturnError(Constants::CODE_FAILED, 'fail');
    }

    /**
     * 发布信息
     */
    public function actionRelease()
    {
        if (\Yii::$app->request->isGet) {
            $this->layout = false;
            $categoryList = Category::categoryMap();
            return $this->render('release', [
                'categoryList' => $categoryList
            ]);
        } else {
            $params = \Yii::$app->request->post();
            if (empty($params['content'])) {
                $this->jsonReturnError(Constants::CODE_FAILED, 'please enter a release message.');
            }
            $result = ReleaseInfo::release($params);
            if ($result) {
                $this->jsonReturnSuccess(Constants::CODE_SUCCESS, $result, 'success');
            }
            $this->jsonReturnError(Constants::CODE_FAILED, 'fail');
        }
    }

}