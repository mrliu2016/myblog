<?php

namespace app\common\models;

use yii\db\ActiveRecord;
use Yii;

class Report extends ActiveRecord
{
    public static function tableName()
    {
        return 't_report'; // TODO: Change the autogenerated stub
    }

    /**
     * 通过ID查询
     *
     * @param $id
     * @param bool $isObject
     * @return mixed
     */
    public static function queryById($id, $isObject = false)
    {
        $find = static::find();
        $find = self::buildParams($find, [['id' => $id]]);
        if ($isObject) {
            return $find->one();
        } else {
            return $find->asArray()->one();
        }
    }

    /**
     * @param $params
     * @return mixed
     */
    public static function queryInfo($params)
    {
        $offset = 0;
        if (!empty($params['page']) && !empty($params['defaultPageSize'])) {
            $offset = ($params['page'] - 1) * $params['defaultPageSize'];
        }
        $find = static::find();
        $find = self::buildParams($find, $params);
        return $find->asArray()
            ->orderBy('created desc')
            ->offset($offset)
            ->limit($params['defaultPageSize'])
            ->all();
    }

    /**
     * @param $params
     * @return mixed
     */
    public static function queryInfoNum($params)
    {
        $find = static::find();
        $find = self::buildParams($find, $params);
        return $find->count();
    }

    /**
     * 举报
     *
     * @param $params
     * @return bool
     */
    public static function report($params)
    {
        $model = new Report();
        $model->userId = $params['userId'];
        $model->reportedUserId = $params['reportedUserId'];
        $model->roomId = $params['roomId'];
        $model->content = $params['content'];
        $model->created = time();
        $model->updated = time();
        return $model->save();
    }

    /**
     * @param $find
     * @param $params
     * @return mixed
     */
    private static function buildParams($find, $params)
    {
        if (isset($params['id']) && !empty($params['id'])) {
            $find->andWhere('id="' . intval($params['id']).'"');
        }
        if (!empty($params['startTime'])) {
            $find->andWhere(['>=', 'created', strtotime($params['startTime'])]);
        }
        if (!empty($params['endTime'])) {
            $find->andWhere(['<=', 'created', strtotime($params['endTime'])]);
        }
        return $find;
    }

    /**
     * 根据sql更新表数据
     *
     * @param string $sql
     * @return int
     * @throws \yii\db\Exception
     */
    public static function updateBySqlCondition($sql = '')
    {
        $connection = Yii::$app->db;
        $command = $connection->createCommand($sql);
        return $command->execute();
    }

    /**
     * @param string $sql
     * @return array
     * @throws \yii\db\Exception
     */
    public static function queryBySQLCondition($sql = '')
    {
        $connection = Yii::$app->db;
        $command = $connection->createCommand($sql);
        return $command->queryAll();
    }
    //根据被举报用户id查询用户信息
    public static function queryReportInfoByReportedUserId($id){

        $sql = "SELECT * FROM ".static ::tableName()." WHERE `reportedUserId`=".intval($id)." ORDER BY created DESC";
        return static ::queryBySQLCondition($sql);
    }
    //对查询出的举报信息排序
    public static function reportSort($list)
    {
        $len = count($list);
        //该层循环控制 需要冒泡的轮数
        for ($i = 1; $i < $len; $i++) { //该层循环用来控制每轮 冒出一个数 需要比较的次数
            for ($k = 0; $k < $len - $i; $k++) {
                if ($list[$k]['id'] > $list[$k + 1]['id']) {
                    $tmp = $list[$k + 1];
                    $list[$k + 1] = $list[$k];
                    $list[$k] = $tmp;
                }
            }
        }
        return $list;
    }

}